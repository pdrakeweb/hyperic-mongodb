<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2011 Clarity Services, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

    Document   : mongodb-plugin.xml
    Author     : Reid Morrison
    Home Page  : https://github.com/ClarityServices/hyperic-mongodb
    Version    : 2.1
    Description:
        Hyperic HQ Plug-in to monitor MongoDB

    Version 2.1 Adds support for secured servers and re-introduces
    process monitoring using config file name for process auto-detection

    Version 2.0 brings the MongoDB Monitoring closer the figures
    returned by mongostat, such as memory, faults, Queued Readers, etc.
    Now supports monitoring remote MongoDB servers without requiring a
    Hyperic Agent to be installed on the MongoDB server. Just requires mongostat
    to be available on the machine where the Agent is running.
    However, CPU utilization is no longer available through this plugin.
    To get CPU utilization create a separate Process monitor through Hyperic.

    All monitoring is performed by calling the following methods though Mongo Shell:
    - db.serverStatus()
    - db.getReplicationInfo()

    db.getReplicationInfo() is only called if the server is part of a Replica Set
-->
<!DOCTYPE plugin [
  <!ENTITY process-metrics SYSTEM "/pdk/plugins/process-metrics.xml">
]>

<plugin>
    <!-- Invoke mongo shell and extract serverStatus -->
    <script name="hq-mongodb-stat">
<![CDATA[
#!/bin/bash
# Parameters: %hostname% %port% %username% %password%
#    username and password are optional, but must be supplied if the
#    mongo server has been secured

JAVA_SCRIPT=$(cat <<EOF
// Print the number of seconds that this replica is behind
function replicaSecondsBehind() {
  status = rs.status();
  // Extract replica delay for a secondary (slave) in a replica set
  if(status["myState"] == 2) {
    // Obtain optime for master and this replica
    master_optime = null;
    my_optime = null;
    members = status["members"]
    for(i in members) {
      member = members[i];
      if (member.self == true && member.optime) {
        my_optime = member.optime.t;
      } else if (member.state == 1) {
        master_optime = member.optime.t;
      }
    }
    if (master_optime && my_optime) {
      secs = (master_optime - my_optime) / 1000
      if (secs < 0) {
        secs = 0;
      }
      print("replica_seconds_behind="+secs);
    }
  }
};

// Print BSON as name value pairs
function flattenBson(hash, prefix) {
    for(key in hash) {
        value = hash[key];
        klass = Object.prototype.toString.call(value).slice(8, -1);
        if(klass == "bson_object") {
            flattenBson(value, prefix+"_"+key)
        } else {
            print(prefix+"_"+key+"="+value)
        };
    }
};

// Authenticate first if username was supplied
if (("$3" != "") && ("$3" != "%username%")) {
  if (db.auth("$3", "$4") != 1) {
    print("Failed to authenticate. Bad Credentials");
    exit(-1);
  }
}

status = db.serverStatus();
flattenBson(status, "serverStatus");

// Additional metrics only if in a Replica Set
repl = status["repl"];
if(repl != null) {
    flattenBson(db.getReplicationInfo(), "replication_info")
    if(repl["secondary"] == true) {
        replicaSecondsBehind();
    }
    print("master=" + (repl["ismaster"] ? 1 : 0))
};
EOF
)

mongo --host $1 --port $2 --quiet admin --eval "$JAVA_SCRIPT"
]]>
    </script>
    <property name="SERVER_STATUS" value="exec:timeout=10,file=pdk/work/scripts/mongodb/hq-mongodb-stat,args=%hostname% %port% %username% %password%,exec=%exec%"/>
    <filter name="template" value="${SERVER_STATUS}:${alias}"/>

    <metrics name="MongoDB Utilization">
        <metric name="Connections"
                alias="serverStatus_connections_current"
                category="UTILIZATION"
                interval="300000"
                indicator="true"/>
        <metric name="Connections Available"
                alias="serverStatus_connections_available"
                interval="600000"
                category="UTILIZATION"/>
        <metric name="Replication Delay"
                alias="replica_seconds_behind"
                category="UTILIZATION"
                units="sec"
                interval="300000"
                indicator="true"/>
        <metric name="Replication Log Available"
                alias="replication_info_timeDiff"
                category="UTILIZATION"
                interval="600000"
                units="sec"/>
        <metric name="Uptime"
                alias="serverStatus_uptime"
                category="UTILIZATION"
                interval="600000"
                units="sec"/>

        <!-- This metric is platform specific -->
        <metric name="Page faults"
                alias="serverStatus_extra_info_page_faults"
                category="UTILIZATION"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>
    </metrics>

    <metrics name="MongoDB Network">
        <metric name="Network In"
                alias="serverStatus_network_bytesIn"
                category="UTILIZATION"
                indicator="true"
                collectionType="trendsup"
                interval="300000"
                units="B"/>
        <metric name="Network Out"
                alias="serverStatus_network_bytesOut"
                category="UTILIZATION"
                indicator="true"
                collectionType="trendsup"
                interval="300000"
                units="B"/>
        <metric name="Network Requests"
                alias="serverStatus_network_numRequests"
                collectionType="trendsup"
                interval="300000"
                category="UTILIZATION"/>
    </metrics>

    <metrics name="MongoDB Memory">
        <metric name="Mapped Memory"
                alias="serverStatus_mem_mapped"
                category="UTILIZATION"
                indicator="true"
                interval="300000"
                units="MB"/>
        <metric name="Virtual Memory Size"
                alias="serverStatus_mem_virtual"
                category="UTILIZATION"
                indicator="true"
                interval="300000"
                units="MB"/>
        <metric name="Resident Memory Size"
                alias="serverStatus_mem_resident"
                category="UTILIZATION"
                indicator="true"
                interval="300000"
                units="MB"/>
    </metrics>

    <metrics name="MongoDB IO">
    <!-- Operations -->
        <metric name="Inserts"
                alias="serverStatus_opcounters_insert"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>

        <metric name="Queries"
                alias="serverStatus_opcounters_query"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>

        <metric name="Updates"
                alias="serverStatus_opcounters_update"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>

        <metric name="Deletes"
                alias="serverStatus_opcounters_delete"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>

        <metric name="Getmores"
                alias="serverStatus_opcounters_getmore"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>

        <metric name="Commands"
                alias="serverStatus_opcounters_command"
                category="THROUGHPUT"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>
    </metrics>

    <metrics name="MongoDB Global Lock">
        <metric name="Lock Time"
                alias="serverStatus_globalLock_lockTime"
                category="UTILIZATION"
                collectionType="trendsup"
                units="mu"
                interval="300000"
                indicator="true"/>
        <metric name="Queued Requests"
                alias="serverStatus_globalLock_currentQueue_total"
                interval="300000"
                category="UTILIZATION"/>
        <metric name="Queued Readers"
                alias="serverStatus_globalLock_currentQueue_readers"
                category="UTILIZATION"
                interval="300000"
                indicator="true"/>
        <metric name="Queued Writers"
                alias="serverStatus_globalLock_currentQueue_writers"
                category="UTILIZATION"
                interval="300000"
                indicator="true"/>
        <metric name="Active Clients"
                alias="serverStatus_globalLock_activeClients_total"
                interval="300000"
                category="UTILIZATION"/>
        <metric name="Active Readers"
                alias="serverStatus_globalLock_activeClients_readers"
                category="UTILIZATION"
                interval="300000"
                indicator="true"/>
        <metric name="Active Writers"
                alias="serverStatus_globalLock_activeClients_writers"
                category="UTILIZATION"
                interval="300000"
                indicator="true"/>
    </metrics>

    <metrics name="MongoDB Index">
        <metric name="Index Accesses"
                alias="serverStatus_indexCounters_btree_accesses"
                category="UTILIZATION"
                interval="300000"
                collectionType="trendsup"/>
        <metric name="Index Hits"
                alias="serverStatus_indexCounters_btree_hits"
                category="UTILIZATION"
                interval="300000"
                collectionType="trendsup"/>
        <metric name="Index Misses"
                alias="serverStatus_indexCounters_btree_misses"
                category="UTILIZATION"
                collectionType="trendsup"
                interval="300000"
                indicator="true"/>
        <metric name="Index Resets"
                alias="serverStatus_indexCounters_btree_resets"
                category="UTILIZATION"
                interval="300000"
                collectionType="trendsup"/>
        <metric name="Index Miss Ratio"
                alias="serverStatus_indexCounters_btree_missRatio"
                category="UTILIZATION"
                interval="600000"
                units="percentage"/>
    </metrics>

    <metrics name="MongoDB Cursors">
        <metric name="Cursors"
                alias="serverStatus_cursors_totalOpen"
                interval="300000"
                category="UTILIZATION"/>
        <metric name="Cursors Size"
                alias="serverStatus_cursors_clientCursors_size"
                interval="300000"
                category="UTILIZATION"/>
        <metric name="Cursors Timed Out"
                alias="serverStatus_cursors_timedOut"
                category="UTILIZATION"
                interval="300000"
                collectionType="trendsup"/>
    </metrics>

    <metrics name="MongoDB Asserts">
        <metric name="Asserts Regular"
                alias="serverStatus_asserts_regular"
                category="UTILIZATION"
                interval="600000"
                collectionType="trendsup"/>
        <metric name="Asserts Warning"
                alias="serverStatus_asserts_warning"
                category="UTILIZATION"
                interval="600000"
                collectionType="trendsup"/>
        <metric name="Asserts Msg"
                alias="serverStatus_asserts_msg"
                category="UTILIZATION"
                interval="600000"
                collectionType="trendsup"/>
        <metric name="Asserts User"
                alias="serverStatus_asserts_user"
                category="UTILIZATION"
                interval="600000"
                collectionType="trendsup"/>
        <metric name="Asserts Rollovers"
                alias="serverStatus_asserts_rollovers"
                category="UTILIZATION"
                interval="600000"
                collectionType="trendsup"/>
    </metrics>

    <metrics name="MongoDB Background Flushing">
        <metric name="Flushes"
                alias="serverStatus_backgroundFlushing_flushes"
                category="UTILIZATION"
                collectionType="trendsup"
                interval="300000"/>
        <metric name="Flush Duration"
                alias="serverStatus_backgroundFlushing_total_ms"
                category="UTILIZATION"
                collectionType="trendsup"
                interval="300000"
                units="ms"/>
        <metric name="Flush Average Duration"
                alias="serverStatus_backgroundFlushing_average_ms"
                category="UTILIZATION"
                interval="600000"
                units="ms"/>
        <metric name="Flush Last Duration"
                alias="serverStatus_backgroundFlushing_last_ms"
                category="UTILIZATION"
                interval="300000"
                units="ms"/>
    </metrics>

    <metrics name="MongoDB Process Metrics">
        <metric name="Process Cpu Usage"
                template="sigar:Type=ProcCpu,Arg=%process.query%:Percent"
                indicator="true"
                interval="300000"
                units="percentage"/>
    </metrics>

    <server name="MongoDB" version="2.x">

        <property name="PROC_QUERY" value="State.Name.eq=mongod,Args.*.re=/etc/mongodb?.conf"/>
        <property name="DEFAULT_CONFIG_FILE" value="/etc/mongodb.conf"/>
        <property name="DEFAULT_LOG_FILE" value="/var/log/mongodb/mongodb.log"/>
        <property name="DEFAULT_PID_FILE" value="/var/run/mongodb/mongodb.pid"/>

        <config>
            <option name="process.query"
                    description="PTQL for MongoDB Process"
                    default="${PROC_QUERY}"/>

            <option name="hostname"
                    description="Usually leave as localhost"
                    default="localhost"/>

            <option name="port"
                    description="MongoDB port number. Usually: 27017, 27018 or 27019"
                    type="int"
                    default="27017"/>

            <option name="username"
                    description="User name [Only if MongoDB Authorization has been enabled]"
                    optional="true"
                    default=""/>

            <option name="password"
                    description="Password [Only if MongoDB Authorization has been enabled]"
                    type="secret"
                    optional="true"
                    default=""/>
        </config>

        <!-- Display inventory properties on the UI
             These properties do not show up in Hyperic :(
             Any help here will be appreciated
        -->
        <properties>
            <property name="serverStatus_version"
                      description="MongoDB Version"/>
            <property name="serverStatus_mem_bits"
                      description="MongoDB Build (bits)"/>
        </properties>

        <!--notifies the plugin to auto-discover one instance of each service-->
        <property name="HAS_BUILTIN_SERVICES" value="true"/>

        <plugin type="autoinventory"
                class="org.hyperic.hq.product.DaemonDetector"/>
        <plugin type="measurement"
                class="org.hyperic.hq.product.MeasurementPlugin"/>
        <plugin type="config_track"
                class="org.hyperic.hq.product.ConfigFileTrackPlugin"/>
        <plugin type="log_track"
                class="org.hyperic.hq.product.LogFileTailPlugin"/>

        <metric name="Availability"
                template="sigar:Type=ProcState,Arg=%process.query%:State"
                category="AVAILABILITY"
                indicator="true"/>

        <metric name="Is Master?"
                template="${SERVER_STATUS}:master"
                units="percentage"
                interval="300000"
                indicator="true"/>

        <metrics include="MongoDB Utilization"/>
        <metrics include="MongoDB Process Metrics"/>
        <metrics include="MongoDB Network"/>
        <metrics include="MongoDB Memory"/>
        <metrics include="MongoDB IO"/>
        <metrics include="MongoDB Global Lock"/>
        <metrics include="MongoDB Index"/>
        <metrics include="MongoDB Cursors"/>
        <metrics include="MongoDB Asserts"/>
        <metrics include="MongoDB Background Flushing"/>
    </server>

    <help name="MongoDB">
  Configure Hyperic for monitoring MongoDB.
  The port for Mongodb is by default 27018, please change the port above if required.
  For servers that have more than one MongoDB instance, update the port.
    </help>

</plugin>
